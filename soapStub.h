/* soapStub.h
   Generated by gSOAP 2.8.3 from remotediscovery.h

Copyright(C) 2000-2011, Robert van Engelen, Genivia Inc. All Rights Reserved.
The generated code is released under one of the following licenses:
1) GPL or 2) Genivia's license for commercial use.
This program is released under the GPL with the additional exemption that
compiling, linking, and/or using OpenSSL is allowed.
*/

#ifndef soapStub_H
#define soapStub_H
#define SOAP_WSA_200408
#define SOAP_NAMESPACE_OF_dn	"http://www.onvif.org/ver10/network/wsdl"
#define SOAP_NAMESPACE_OF_d	"http://schemas.xmlsoap.org/ws/2005/04/discovery"
#include "stdsoap2.h"
#ifdef __cplusplus
extern "C" {
#endif

/******************************************************************************\
 *                                                                            *
 * Enumerations                                                               *
 *                                                                            *
\******************************************************************************/


#ifndef SOAP_TYPE_wsa__RelationshipTypeValues
#define SOAP_TYPE_wsa__RelationshipTypeValues (12)
/* wsa:RelationshipTypeValues */
enum wsa__RelationshipTypeValues {wsa__Reply = 0};
typedef enum wsa__RelationshipTypeValues wsa__RelationshipTypeValues;
#endif

#ifndef SOAP_TYPE_wsa__FaultSubcodeValues
#define SOAP_TYPE_wsa__FaultSubcodeValues (13)
/* wsa:FaultSubcodeValues */
enum wsa__FaultSubcodeValues {wsa__InvalidMessageInformationHeader = 0, wsa__MessageInformationHeaderRequired = 1, wsa__DestinationUnreachable = 2, wsa__ActionNotSupported = 3, wsa__EndpointUnavailable = 4};
typedef enum wsa__FaultSubcodeValues wsa__FaultSubcodeValues;
#endif

#ifndef SOAP_TYPE_d__RelationshipType
#define SOAP_TYPE_d__RelationshipType (39)
/* d:RelationshipType */
enum d__RelationshipType {d__RelationshipType__d__Suppression = 0};
#endif

#ifndef SOAP_TYPE_d__FaultCodeType
#define SOAP_TYPE_d__FaultCodeType (40)
/* d:FaultCodeType */
enum d__FaultCodeType {d__FaultCodeType__d__MatchingRuleNotSupported = 0};
#endif

/******************************************************************************\
 *                                                                            *
 * Types with Custom Serializers                                              *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Classes and Structs                                                        *
 *                                                                            *
\******************************************************************************/


#if 0 /* volatile type: do not declare here, declared elsewhere */

#endif

#ifndef SOAP_TYPE_wsa__EndpointReferenceType
#define SOAP_TYPE_wsa__EndpointReferenceType (7)
/* wsa:EndpointReferenceType */
struct wsa__EndpointReferenceType
{
	char *Address;	/* required element of type xsd:string */
	struct wsa__ReferencePropertiesType *ReferenceProperties;	/* optional element of type wsa:ReferencePropertiesType */
	struct wsa__ReferenceParametersType *ReferenceParameters;	/* optional element of type wsa:ReferenceParametersType */
	char **PortType;	/* optional element of type xsd:QName */
	struct wsa__ServiceNameType *ServiceName;	/* optional element of type wsa:ServiceNameType */
	int __size;	/* sequence of elements <-any> */
	char **__any;
	char *__anyAttribute;	/* optional attribute of type xsd:anyType */
};
typedef struct wsa__EndpointReferenceType wsa__EndpointReferenceType;
#endif

#ifndef SOAP_TYPE_wsa__ReferencePropertiesType
#define SOAP_TYPE_wsa__ReferencePropertiesType (8)
/* wsa:ReferencePropertiesType */
struct wsa__ReferencePropertiesType
{
	int __size;	/* sequence of elements <-any> */
	char **__any;
};
typedef struct wsa__ReferencePropertiesType wsa__ReferencePropertiesType;
#endif

#ifndef SOAP_TYPE_wsa__ReferenceParametersType
#define SOAP_TYPE_wsa__ReferenceParametersType (9)
/* wsa:ReferenceParametersType */
struct wsa__ReferenceParametersType
{
	int __size;	/* sequence of elements <-any> */
	char **__any;
};
typedef struct wsa__ReferenceParametersType wsa__ReferenceParametersType;
#endif

#ifndef SOAP_TYPE_wsa__ServiceNameType
#define SOAP_TYPE_wsa__ServiceNameType (10)
/* Primitive wsa:ServiceNameType schema type: */
struct wsa__ServiceNameType
{
	char *__item;
	char *PortName;	/* optional attribute of type xsd:string */
	char *__anyAttribute;	/* optional attribute of type xsd:anyType */
};
typedef struct wsa__ServiceNameType wsa__ServiceNameType;
#endif

#ifndef SOAP_TYPE_wsa__Relationship
#define SOAP_TYPE_wsa__Relationship (11)
/* Primitive wsa:Relationship schema type: */
struct wsa__Relationship
{
	char *__item;
	char *RelationshipType;	/* optional attribute of type xsd:QName */
	char *__anyAttribute;	/* optional attribute of type xsd:anyType */
};
typedef struct wsa__Relationship wsa__Relationship;
#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Header
#define SOAP_TYPE_SOAP_ENV__Header (29)
/* SOAP Header: */
struct SOAP_ENV__Header
{
	char *wsa__MessageID;	/* optional element of type wsa:MessageID */
	struct wsa__Relationship *wsa__RelatesTo;	/* optional element of type wsa:RelatesTo */
	struct wsa__EndpointReferenceType *wsa__From;	/* optional element of type wsa:From */
	struct wsa__EndpointReferenceType *wsa__ReplyTo;	/* mustUnderstand */
	struct wsa__EndpointReferenceType *wsa__FaultTo;	/* mustUnderstand */
	char *wsa__To;	/* mustUnderstand */
	char *wsa__Action;	/* mustUnderstand */
};
#endif

#endif

#ifndef SOAP_TYPE_d__HelloType
#define SOAP_TYPE_d__HelloType (41)
/* d:HelloType */
struct d__HelloType
{
	struct wsa__EndpointReferenceType wsa__EndpointReference;	/* required element of type wsa:EndpointReference */
	char *Types;	/* optional element of type d:QNameListType */
	struct d__ScopesType *Scopes;	/* optional element of type d:ScopesType */
	char *XAddrs;	/* optional element of type d:UriListType */
	unsigned int MetadataVersion;	/* required element of type xsd:unsignedInt */
	int __size;	/* sequence of elements <-any> */
	char **__any;
	char *__anyAttribute;	/* optional attribute of type xsd:anyType */
};
#endif

#ifndef SOAP_TYPE_d__ByeType
#define SOAP_TYPE_d__ByeType (44)
/* d:ByeType */
struct d__ByeType
{
	struct wsa__EndpointReferenceType wsa__EndpointReference;	/* required element of type wsa:EndpointReference */
	char *Types;	/* optional element of type d:QNameListType */
	struct d__ScopesType *Scopes;	/* optional element of type d:ScopesType */
	char *XAddrs;	/* optional element of type d:UriListType */
	unsigned int *MetadataVersion;	/* optional element of type xsd:unsignedInt */
	int __size;	/* sequence of elements <-any> */
	char **__any;
	char *__anyAttribute;	/* optional attribute of type xsd:anyType */
};
#endif

#ifndef SOAP_TYPE_d__ProbeType
#define SOAP_TYPE_d__ProbeType (46)
/* d:ProbeType */
struct d__ProbeType
{
	char *Types;	/* optional element of type d:QNameListType */
	struct d__ScopesType *Scopes;	/* optional element of type d:ScopesType */
	int __size;	/* sequence of elements <-any> */
	char **__any;
	char *__anyAttribute;	/* optional attribute of type xsd:anyType */
};
#endif

#ifndef SOAP_TYPE_d__ProbeMatchesType
#define SOAP_TYPE_d__ProbeMatchesType (47)
/* d:ProbeMatchesType */
struct d__ProbeMatchesType
{
	int __sizeProbeMatch;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* sequence of elements <ProbeMatch> */
	struct d__ProbeMatchType *ProbeMatch;	/* optional element of type d:ProbeMatchType */
	int __size;	/* sequence of elements <-any> */
	char **__any;
	char *__anyAttribute;	/* optional attribute of type xsd:anyType */
};
#endif

#ifndef SOAP_TYPE_d__ProbeMatchType
#define SOAP_TYPE_d__ProbeMatchType (48)
/* d:ProbeMatchType */
struct d__ProbeMatchType
{
	struct wsa__EndpointReferenceType wsa__EndpointReference;	/* required element of type wsa:EndpointReference */
	char *Types;	/* optional element of type d:QNameListType */
	struct d__ScopesType *Scopes;	/* optional element of type d:ScopesType */
	char *XAddrs;	/* optional element of type d:UriListType */
	unsigned int MetadataVersion;	/* required element of type xsd:unsignedInt */
	int __size;	/* sequence of elements <-any> */
	char **__any;
	char *__anyAttribute;	/* optional attribute of type xsd:anyType */
};
#endif

#ifndef SOAP_TYPE_d__ResolveType
#define SOAP_TYPE_d__ResolveType (50)
/* d:ResolveType */
struct d__ResolveType
{
	struct wsa__EndpointReferenceType wsa__EndpointReference;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* required element of type wsa:EndpointReference */
	int __size;	/* sequence of elements <-any> */
	char **__any;
	char *__anyAttribute;	/* optional attribute of type xsd:anyType */
};
#endif

#ifndef SOAP_TYPE_d__ResolveMatchesType
#define SOAP_TYPE_d__ResolveMatchesType (51)
/* d:ResolveMatchesType */
struct d__ResolveMatchesType
{
	struct d__ResolveMatchType *ResolveMatch;	/* optional element of type d:ResolveMatchType */
	int __size;	/* sequence of elements <-any> */
	char **__any;
	char *__anyAttribute;	/* optional attribute of type xsd:anyType */
};
#endif

#ifndef SOAP_TYPE_d__ResolveMatchType
#define SOAP_TYPE_d__ResolveMatchType (52)
/* d:ResolveMatchType */
struct d__ResolveMatchType
{
	struct wsa__EndpointReferenceType wsa__EndpointReference;	/* required element of type wsa:EndpointReference */
	char *Types;	/* optional element of type d:QNameListType */
	struct d__ScopesType *Scopes;	/* optional element of type d:ScopesType */
	char *XAddrs;	/* required element of type d:UriListType */
	unsigned int MetadataVersion;	/* required element of type xsd:unsignedInt */
	int __size;	/* sequence of elements <-any> */
	char **__any;
	char *__anyAttribute;	/* optional attribute of type xsd:anyType */
};
#endif

#ifndef SOAP_TYPE_d__SecurityType
#define SOAP_TYPE_d__SecurityType (54)
/* d:SecurityType */
struct d__SecurityType
{
	struct d__SigType *Sig;	/* optional element of type d:SigType */
	char *__anyAttribute;	/* optional attribute of type xsd:anyType */
};
#endif

#ifndef SOAP_TYPE_d__SigType
#define SOAP_TYPE_d__SigType (55)
/* d:SigType */
struct d__SigType
{
	int __size;	/* sequence of elements <-any> */
	char **__any;
	char *Scheme;	/* required attribute of type xsd:string */
	char *KeyId;	/* optional attribute of type xsd:string */
	char *Refs;	/* required attribute of type xsd:IDREFS */
	char *Sig;	/* required attribute of type xsd:string */
	char *__anyAttribute;	/* optional attribute of type xsd:anyType */
};
#endif

#ifndef SOAP_TYPE_d__ScopesType
#define SOAP_TYPE_d__ScopesType (42)
/* Primitive d:ScopesType schema type: */
struct d__ScopesType
{
	char *__item;
	char *MatchBy;	/* optional attribute of type xsd:string */
	char *__anyAttribute;	/* optional attribute of type xsd:anyType */
};
#endif

#ifndef SOAP_TYPE_d__AppSequenceType
#define SOAP_TYPE_d__AppSequenceType (57)
/* d:AppSequenceType */
struct d__AppSequenceType
{
	unsigned int InstanceId;	/* required attribute of type xsd:unsignedInt */
	char *SequenceId;	/* optional attribute of type xsd:string */
	unsigned int MessageNumber;	/* required attribute of type xsd:unsignedInt */
	char *__anyAttribute;	/* optional attribute of type xsd:anyType */
};
#endif

#ifndef SOAP_TYPE___dndl__Probe
#define SOAP_TYPE___dndl__Probe (61)
/* Operation wrapper: */
struct __dndl__Probe
{
	struct d__ProbeType *d__Probe;	/* optional element of type d:ProbeType */
};
#endif

#ifndef SOAP_TYPE___dnrd__Hello
#define SOAP_TYPE___dnrd__Hello (65)
/* Operation wrapper: */
struct __dnrd__Hello
{
	struct d__HelloType *d__Hello;	/* optional element of type d:HelloType */
};
#endif

#ifndef SOAP_TYPE___dnrd__Bye
#define SOAP_TYPE___dnrd__Bye (68)
/* Operation wrapper: */
struct __dnrd__Bye
{
	struct d__ByeType *d__Bye;	/* optional element of type d:ByeType */
};
#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Code
#define SOAP_TYPE_SOAP_ENV__Code (69)
/* SOAP Fault Code: */
struct SOAP_ENV__Code
{
	char *SOAP_ENV__Value;	/* optional element of type xsd:QName */
	struct SOAP_ENV__Code *SOAP_ENV__Subcode;	/* optional element of type SOAP-ENV:Code */
};
#endif

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Detail
#define SOAP_TYPE_SOAP_ENV__Detail (71)
/* SOAP-ENV:Detail */
struct SOAP_ENV__Detail
{
	char *__any;
	int __type;	/* any type of element <fault> (defined below) */
	void *fault;	/* transient */
};
#endif

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Reason
#define SOAP_TYPE_SOAP_ENV__Reason (74)
/* SOAP-ENV:Reason */
struct SOAP_ENV__Reason
{
	char *SOAP_ENV__Text;	/* optional element of type xsd:string */
};
#endif

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Fault
#define SOAP_TYPE_SOAP_ENV__Fault (75)
/* SOAP Fault: */
struct SOAP_ENV__Fault
{
	char *faultcode;	/* optional element of type xsd:QName */
	char *faultstring;	/* optional element of type xsd:string */
	char *faultactor;	/* optional element of type xsd:string */
	struct SOAP_ENV__Detail *detail;	/* optional element of type SOAP-ENV:Detail */
	struct SOAP_ENV__Code *SOAP_ENV__Code;	/* optional element of type SOAP-ENV:Code */
	struct SOAP_ENV__Reason *SOAP_ENV__Reason;	/* optional element of type SOAP-ENV:Reason */
	char *SOAP_ENV__Node;	/* optional element of type xsd:string */
	char *SOAP_ENV__Role;	/* optional element of type xsd:string */
	struct SOAP_ENV__Detail *SOAP_ENV__Detail;	/* optional element of type SOAP-ENV:Detail */
};
#endif

#endif

/******************************************************************************\
 *                                                                            *
 * Typedefs                                                                   *
 *                                                                            *
\******************************************************************************/

#ifndef SOAP_TYPE__QName
#define SOAP_TYPE__QName (5)
typedef char *_QName;
#endif

#ifndef SOAP_TYPE__XML
#define SOAP_TYPE__XML (6)
typedef char *_XML;
#endif

#ifndef SOAP_TYPE__wsa__EndpointReference
#define SOAP_TYPE__wsa__EndpointReference (19)
typedef struct wsa__EndpointReferenceType _wsa__EndpointReference;
#endif

#ifndef SOAP_TYPE__wsa__MessageID
#define SOAP_TYPE__wsa__MessageID (20)
typedef char *_wsa__MessageID;
#endif

#ifndef SOAP_TYPE__wsa__RelatesTo
#define SOAP_TYPE__wsa__RelatesTo (21)
typedef struct wsa__Relationship _wsa__RelatesTo;
#endif

#ifndef SOAP_TYPE__wsa__To
#define SOAP_TYPE__wsa__To (22)
typedef char *_wsa__To;
#endif

#ifndef SOAP_TYPE__wsa__Action
#define SOAP_TYPE__wsa__Action (23)
typedef char *_wsa__Action;
#endif

#ifndef SOAP_TYPE__wsa__From
#define SOAP_TYPE__wsa__From (24)
typedef struct wsa__EndpointReferenceType _wsa__From;
#endif

#ifndef SOAP_TYPE__wsa__ReplyTo
#define SOAP_TYPE__wsa__ReplyTo (25)
typedef struct wsa__EndpointReferenceType _wsa__ReplyTo;
#endif

#ifndef SOAP_TYPE__wsa__FaultTo
#define SOAP_TYPE__wsa__FaultTo (26)
typedef struct wsa__EndpointReferenceType _wsa__FaultTo;
#endif

#ifndef SOAP_TYPE__wsa__ReplyAfter
#define SOAP_TYPE__wsa__ReplyAfter (28)
typedef unsigned int _wsa__ReplyAfter;
#endif

#ifndef SOAP_TYPE_xsd__IDREFS
#define SOAP_TYPE_xsd__IDREFS (34)
typedef char *xsd__IDREFS;
#endif

#ifndef SOAP_TYPE_d__OpenRelationshipType
#define SOAP_TYPE_d__OpenRelationshipType (35)
typedef char *d__OpenRelationshipType;
#endif

#ifndef SOAP_TYPE_d__QNameListType
#define SOAP_TYPE_d__QNameListType (36)
typedef char *d__QNameListType;
#endif

#ifndef SOAP_TYPE_d__UriListType
#define SOAP_TYPE_d__UriListType (37)
typedef char *d__UriListType;
#endif

#ifndef SOAP_TYPE_d__FaultCodeOpenType
#define SOAP_TYPE_d__FaultCodeOpenType (38)
typedef char *d__FaultCodeOpenType;
#endif


/******************************************************************************\
 *                                                                            *
 * Externals                                                                  *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Server-Side Operations                                                     *
 *                                                                            *
\******************************************************************************/


SOAP_FMAC5 int SOAP_FMAC6 __dndl__Probe(struct soap*, struct d__ProbeType *d__Probe, struct d__ProbeMatchesType *d__ProbeMatches);

SOAP_FMAC5 int SOAP_FMAC6 __dnrd__Hello(struct soap*, struct d__HelloType *d__Hello, struct d__ResolveType *dn__HelloResponse);

SOAP_FMAC5 int SOAP_FMAC6 __dnrd__Bye(struct soap*, struct d__ByeType *d__Bye, struct d__ResolveType *dn__ByeResponse);

/******************************************************************************\
 *                                                                            *
 * Server-Side Skeletons to Invoke Service Operations                         *
 *                                                                            *
\******************************************************************************/

SOAP_FMAC5 int SOAP_FMAC6 soap_serve(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_request(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve___dndl__Probe(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve___dnrd__Hello(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve___dnrd__Bye(struct soap*);

/******************************************************************************\
 *                                                                            *
 * Client-Side Call Stubs                                                     *
 *                                                                            *
\******************************************************************************/


SOAP_FMAC5 int SOAP_FMAC6 soap_call___dndl__Probe(struct soap *soap, const char *soap_endpoint, const char *soap_action, struct d__ProbeType *d__Probe, struct d__ProbeMatchesType *d__ProbeMatches);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___dnrd__Hello(struct soap *soap, const char *soap_endpoint, const char *soap_action, struct d__HelloType *d__Hello, struct d__ResolveType *dn__HelloResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___dnrd__Bye(struct soap *soap, const char *soap_endpoint, const char *soap_action, struct d__ByeType *d__Bye, struct d__ResolveType *dn__ByeResponse);

#ifdef __cplusplus
}
#endif

#endif

/* End of soapStub.h */
